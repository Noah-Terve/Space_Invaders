
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 2023.1.0.43.3

// backanno -o final_project_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui final_project_impl_1.udb 
// Netlist created on Fri Dec  1 15:08:59 2023
// Netlist written on Fri Dec  1 15:09:06 2023
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module top ( nes_data, led, top_two, disp, nes_latch, temp, nes_clk );
  input  nes_data;
  output [1:0] led;
  output [1:0] top_two;
  output [6:0] disp;
  output nes_latch;
  output [7:0] temp;
  output nes_clk;
  wire   \display.counter_8__N_57[6] , \display.counter_8__N_57[5] , 
         \display.n2345 , \display.n3 , \display.n1194 , \display.n4 , clk, 
         \display.n1196 , \display.counter_8__N_57[4] , 
         \display.counter_8__N_57[3] , \display.n2342 , \display.n5 , 
         \display.n1192 , \display.n6 , \display.counter_8__N_57[2] , 
         \display.counter_8__N_57[1] , \display.n2339 , \display.n7 , 
         \display.n1190 , \display.n8 , \display.counter_8__N_57[0] , 
         \display.n2276 , \display.n9 , VCC_net, \display.counter_8__N_57[8] , 
         \display.counter_8__N_57[7] , \display.n2348 , \display.counter[8] , 
         \display.n2 , \logic.top_two_c_1_N_69[10] , \logic.n2369 , 
         \logic.n1187 , \logic.n315 , top_two_c_1, \logic.alien_clock[5] , 
         nes_clk_c, \logic.alien_clock_5__N_56[5] , \logic.n2324 , 
         \logic.n1214 , \logic.top_two_c_1_N_69[3] , 
         \logic.top_two_c_1_N_69[2] , \logic.n2357 , 
         \logic.alien_xposition[2] , \logic.n1179 , \logic.alien_xposition[1] , 
         \logic.n1181 , \logic.logic_alieny_7__N_1[0] , \logic.n2279 , 
         \logic_alieny[0] , \logic.n271 , \logic.n1200 , 
         \logic.logic_alieny_7__N_1[6] , \logic.logic_alieny_7__N_1[5] , 
         \logic.n2333 , \logic_alieny[6] , \logic.n1204 , \logic_alieny[5] , 
         \logic.n1206 , \logic.logic_alieny_7__N_1[4] , 
         \logic.logic_alieny_7__N_1[3] , \logic.n2330 , \logic_alieny[4] , 
         \logic.n1202 , \logic_alieny[3] , \logic.top_two_c_1_N_69[1] , 
         \logic.n2351 , \logic.alien_direction , \logic.alien_xposition[0] , 
         \logic.top_two_c_1_N_69[9] , \logic.top_two_c_1_N_69[8] , 
         \logic.n2366 , \logic.alien_xposition[8] , \logic.n1185 , 
         \logic.alien_xposition[7] , \logic.alien_clock_5__N_56[4] , 
         \logic.alien_clock_5__N_56[3] , \logic.n2321 , \logic.n2 , 
         \logic.n1212 , \logic.n3 , \logic.top_two_c_1_N_69[5] , 
         \logic.top_two_c_1_N_69[4] , \logic.n2360 , 
         \logic.alien_xposition[4] , \logic.alien_xposition[3] , \logic.n1183 , 
         \logic.alien_clock_5__N_56[2] , \logic.alien_clock_5__N_56[1] , 
         \logic.n2318 , \logic.n4 , \logic.n1210 , \logic.n5 , 
         \logic.alien_clock_5__N_56[0] , \logic.n2282 , \logic.n6 , 
         \logic.top_two_c_1_N_69[7] , \logic.top_two_c_1_N_69[6] , 
         \logic.n2363 , \logic.alien_xposition[6] , \logic.alien_xposition[5] , 
         \logic.logic_alieny_7__N_1[2] , \logic.logic_alieny_7__N_1[1] , 
         \logic.n2327 , \logic_alieny[2] , \logic_alieny[1] , 
         \logic.logic_alieny_7__N_1[8] , \logic.logic_alieny_7__N_1[7] , 
         \logic.n2336 , top_two_c_0, \logic_alieny[7] , 
         \nes.counter_20__N_18[0] , \nes.n2285 , \nes.n21 , 
         \nes.NEScount_0__N_55 , \nes.n1217 , \nes.counter_20__N_18[16] , 
         \nes.counter_20__N_18[15] , \nes.n2309 , \nes.NEScount[7] , 
         \nes.n1231 , \nes.NEScount[6] , \nes.n1233 , 
         \nes.counter_20__N_18[14] , \nes.counter_20__N_18[13] , \nes.n2306 , 
         \nes.NEScount[5] , \nes.n1229 , \nes.NEScount[4] , 
         \nes.counter_20__N_18[10] , \nes.counter_20__N_18[9] , \nes.n2300 , 
         \nes.NEScount[1] , \nes.n1225 , \nes.NEScount[0] , \nes.n1227 , 
         \nes.counter_20__N_18[8] , \nes.counter_20__N_18[7] , \nes.n2297 , 
         \nes.counter[8] , \nes.n1223 , \nes.counter[7] , 
         \nes.counter_20__N_18[6] , \nes.counter_20__N_18[5] , \nes.n2294 , 
         \nes.counter[6] , \nes.n1221 , \nes.counter[5] , 
         \nes.counter_20__N_18[4] , \nes.counter_20__N_18[3] , \nes.n2291 , 
         \nes.counter[4] , \nes.n1219 , \nes.counter[3] , 
         \nes.counter_20__N_18[12] , \nes.counter_20__N_18[11] , \nes.n2303 , 
         \nes.NEScount[3] , \nes.NEScount[2] , \nes.counter_20__N_18[2] , 
         \nes.counter_20__N_18[1] , \nes.n2288 , \nes.counter[2] , \nes.n20 , 
         \nes.counter_20__N_18[20] , \nes.counter_20__N_18[19] , \nes.n2315 , 
         \nes.counter[20] , \nes.n1235 , \nes.counter[19] , 
         \nes.counter_20__N_18[18] , \nes.counter_20__N_18[17] , \nes.n2312 , 
         \nes.counter[18] , \nes.NEScount[8] , \display.led_c_0_N_71 , led_c_0, 
         \nes.temp[5].sig_001.FeedThruLUT , \nes.temp[6].sig_000.FeedThruLUT , 
         \nes.temp[5] , \nes.temp[6] , \nes.temp[7] , 
         \nes.temp[3].sig_003.FeedThruLUT , \nes.temp[4].sig_002.FeedThruLUT , 
         \nes.temp[3] , \nes.temp[4] , \nes.temp[1].sig_005.FeedThruLUT , 
         \nes.temp[2].sig_004.FeedThruLUT , \nes.temp[1] , \nes.temp[2] , 
         \nes.temp_0__N_17 , \nes.temp[0].sig_006.FeedThruLUT , nes_data_c, 
         \nes.temp[0] , \nes.temp[6].sig_009.FeedThruLUT , 
         \nes.temp[7].sig_007.FeedThruLUT , \nes.temp_two_0__N_16 , 
         \nes.temp_two[7] , \nes.temp_two[6] , 
         \nes.temp[1].sig_014.FeedThruLUT , \nes.temp[0].sig_008.FeedThruLUT , 
         \nes.temp_two[0] , \nes.temp_two[1] , 
         \nes.temp[4].sig_011.FeedThruLUT , \nes.temp[5].sig_010.FeedThruLUT , 
         \nes.temp_two[5] , \nes.temp_two[4] , 
         \nes.temp[2].sig_013.FeedThruLUT , \nes.temp[3].sig_012.FeedThruLUT , 
         \nes.temp_two[3] , \nes.temp_two[2] , \logic.alien_direction_N_82 , 
         \logic.alien_direction_N_81 , \logic.n61 , \logic.n1802 , 
         \logic.n1334 , \display.tensdigit[6] , \display.onesdigit[6] , 
         disp_c_6, \display.tensdigit[5] , \display.onesdigit[5] , disp_c_5, 
         \display.onesdigit[4] , \display.tensdigit[4] , disp_c_4, 
         \display.tensdigit[3] , \display.onesdigit[3] , disp_c_3, 
         \display.tensdigit[2] , \display.onesdigit[2] , disp_c_2, 
         \display.tensdigit[1] , \display.onesdigit[1] , disp_c_1, 
         \display.tensdigit[0] , \display.onesdigit[0] , disp_c_0, \logic.n66 , 
         \logic.n1562 , \logic.n70 , \nes.n12 , \nes.n11 , \nes.n9 , \nes.n10 , 
         \nes.counter[20]_enable_8 , \nes.n9_adj_84 , \nes.n1566 , 
         \nes.n10_adj_83 , \nes.n1567 , \nes.nes_latch_c_N_67 , 
         \nes.nes_latch_c_N_68 , nes_latch_c, \nes.n955 , \nes.n28 , \nes.n36 , 
         \nes.nes_clk_c_N_58 , led_c_1, temp_c_0, temp_c_2, temp_c_7, temp_c_3, 
         temp_c_6, temp_c_5, temp_c_4, temp_c_1;

  display_SLICE_0 \display.SLICE_0 ( .DI1(\display.counter_8__N_57[6] ), 
    .DI0(\display.counter_8__N_57[5] ), .D1(\display.n2345 ), 
    .C1(\display.n3 ), .D0(\display.n1194 ), .C0(\display.n4 ), .CLK(clk), 
    .CIN0(\display.n1194 ), .CIN1(\display.n2345 ), .Q0(\display.n4 ), 
    .Q1(\display.n3 ), .F0(\display.counter_8__N_57[5] ), 
    .F1(\display.counter_8__N_57[6] ), .COUT1(\display.n1196 ), 
    .COUT0(\display.n2345 ));
  display_SLICE_1 \display.SLICE_1 ( .DI1(\display.counter_8__N_57[4] ), 
    .DI0(\display.counter_8__N_57[3] ), .D1(\display.n2342 ), 
    .C1(\display.n5 ), .D0(\display.n1192 ), .C0(\display.n6 ), .CLK(clk), 
    .CIN0(\display.n1192 ), .CIN1(\display.n2342 ), .Q0(\display.n6 ), 
    .Q1(\display.n5 ), .F0(\display.counter_8__N_57[3] ), 
    .F1(\display.counter_8__N_57[4] ), .COUT1(\display.n1194 ), 
    .COUT0(\display.n2342 ));
  display_SLICE_2 \display.SLICE_2 ( .DI1(\display.counter_8__N_57[2] ), 
    .DI0(\display.counter_8__N_57[1] ), .D1(\display.n2339 ), 
    .C1(\display.n7 ), .D0(\display.n1190 ), .C0(\display.n8 ), .CLK(clk), 
    .CIN0(\display.n1190 ), .CIN1(\display.n2339 ), .Q0(\display.n8 ), 
    .Q1(\display.n7 ), .F0(\display.counter_8__N_57[1] ), 
    .F1(\display.counter_8__N_57[2] ), .COUT1(\display.n1192 ), 
    .COUT0(\display.n2339 ));
  display_SLICE_3 \display.SLICE_3 ( .DI1(\display.counter_8__N_57[0] ), 
    .D1(\display.n2276 ), .C1(\display.n9 ), .B1(VCC_net), .CLK(clk), 
    .CIN1(\display.n2276 ), .Q1(\display.n9 ), 
    .F1(\display.counter_8__N_57[0] ), .COUT1(\display.n1190 ), 
    .COUT0(\display.n2276 ));
  display_SLICE_4 \display.SLICE_4 ( .DI1(\display.counter_8__N_57[8] ), 
    .DI0(\display.counter_8__N_57[7] ), .D1(\display.n2348 ), 
    .C1(\display.counter[8] ), .D0(\display.n1196 ), .C0(\display.n2 ), 
    .CLK(clk), .CIN0(\display.n1196 ), .CIN1(\display.n2348 ), 
    .Q0(\display.n2 ), .Q1(\display.counter[8] ), 
    .F0(\display.counter_8__N_57[7] ), .F1(\display.counter_8__N_57[8] ), 
    .COUT0(\display.n2348 ));
  logic_SLICE_5 \logic.SLICE_5 ( .DI0(\logic.top_two_c_1_N_69[10] ), 
    .D1(\logic.n2369 ), .D0(\logic.n1187 ), .C0(\logic.n315 ), 
    .B0(top_two_c_1), .CE(\logic.alien_clock[5] ), .CLK(nes_clk_c), 
    .CIN0(\logic.n1187 ), .CIN1(\logic.n2369 ), .Q0(top_two_c_1), 
    .F0(\logic.top_two_c_1_N_69[10] ), .COUT0(\logic.n2369 ));
  logic_SLICE_6 \logic.SLICE_6 ( .DI0(\logic.alien_clock_5__N_56[5] ), 
    .D1(\logic.n2324 ), .D0(\logic.n1214 ), .C0(\logic.alien_clock[5] ), 
    .LSR(\logic.alien_clock[5] ), .CLK(nes_clk_c), .CIN0(\logic.n1214 ), 
    .CIN1(\logic.n2324 ), .Q0(\logic.alien_clock[5] ), 
    .F0(\logic.alien_clock_5__N_56[5] ), .COUT0(\logic.n2324 ));
  logic_SLICE_7 \logic.SLICE_7 ( .DI1(\logic.top_two_c_1_N_69[3] ), 
    .DI0(\logic.top_two_c_1_N_69[2] ), .D1(\logic.n2357 ), .C1(\logic.n315 ), 
    .B1(\logic.alien_xposition[2] ), .D0(\logic.n1179 ), .C0(\logic.n315 ), 
    .B0(\logic.alien_xposition[1] ), .CE(\logic.alien_clock[5] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1179 ), .CIN1(\logic.n2357 ), 
    .Q0(\logic.alien_xposition[1] ), .Q1(\logic.alien_xposition[2] ), 
    .F0(\logic.top_two_c_1_N_69[2] ), .F1(\logic.top_two_c_1_N_69[3] ), 
    .COUT1(\logic.n1181 ), .COUT0(\logic.n2357 ));
  logic_SLICE_8 \logic.SLICE_8 ( .DI1(\logic.logic_alieny_7__N_1[0] ), 
    .D1(\logic.n2279 ), .C1(\logic_alieny[0] ), .B1(\logic.n271 ), 
    .CLK(nes_clk_c), .CIN1(\logic.n2279 ), .Q1(\logic_alieny[0] ), 
    .F1(\logic.logic_alieny_7__N_1[0] ), .COUT1(\logic.n1200 ), 
    .COUT0(\logic.n2279 ));
  logic_SLICE_9 \logic.SLICE_9 ( .DI1(\logic.logic_alieny_7__N_1[6] ), 
    .DI0(\logic.logic_alieny_7__N_1[5] ), .D1(\logic.n2333 ), 
    .C1(\logic_alieny[6] ), .B1(\logic.n271 ), .D0(\logic.n1204 ), 
    .C0(\logic_alieny[5] ), .B0(\logic.n271 ), .CLK(nes_clk_c), 
    .CIN0(\logic.n1204 ), .CIN1(\logic.n2333 ), .Q0(\logic_alieny[5] ), 
    .Q1(\logic_alieny[6] ), .F0(\logic.logic_alieny_7__N_1[5] ), 
    .F1(\logic.logic_alieny_7__N_1[6] ), .COUT1(\logic.n1206 ), 
    .COUT0(\logic.n2333 ));
  logic_SLICE_10 \logic.SLICE_10 ( .DI1(\logic.logic_alieny_7__N_1[4] ), 
    .DI0(\logic.logic_alieny_7__N_1[3] ), .D1(\logic.n2330 ), 
    .C1(\logic_alieny[4] ), .B1(\logic.n271 ), .D0(\logic.n1202 ), 
    .C0(\logic_alieny[3] ), .CLK(nes_clk_c), .CIN0(\logic.n1202 ), 
    .CIN1(\logic.n2330 ), .Q0(\logic_alieny[3] ), .Q1(\logic_alieny[4] ), 
    .F0(\logic.logic_alieny_7__N_1[3] ), .F1(\logic.logic_alieny_7__N_1[4] ), 
    .COUT1(\logic.n1204 ), .COUT0(\logic.n2330 ));
  logic_SLICE_11 \logic.SLICE_11 ( .DI1(\logic.top_two_c_1_N_69[1] ), 
    .D1(\logic.n2351 ), .C1(\logic.alien_direction ), 
    .B1(\logic.alien_xposition[0] ), .B0(\logic.n315 ), 
    .CE(\logic.alien_clock[5] ), .CLK(nes_clk_c), .CIN1(\logic.n2351 ), 
    .Q1(\logic.alien_xposition[0] ), .F1(\logic.top_two_c_1_N_69[1] ), 
    .COUT1(\logic.n1179 ), .COUT0(\logic.n2351 ));
  logic_SLICE_12 \logic.SLICE_12 ( .DI1(\logic.top_two_c_1_N_69[9] ), 
    .DI0(\logic.top_two_c_1_N_69[8] ), .D1(\logic.n2366 ), .C1(\logic.n315 ), 
    .B1(\logic.alien_xposition[8] ), .D0(\logic.n1185 ), .C0(\logic.n315 ), 
    .B0(\logic.alien_xposition[7] ), .CE(\logic.alien_clock[5] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1185 ), .CIN1(\logic.n2366 ), 
    .Q0(\logic.alien_xposition[7] ), .Q1(\logic.alien_xposition[8] ), 
    .F0(\logic.top_two_c_1_N_69[8] ), .F1(\logic.top_two_c_1_N_69[9] ), 
    .COUT1(\logic.n1187 ), .COUT0(\logic.n2366 ));
  logic_SLICE_13 \logic.SLICE_13 ( .DI1(\logic.alien_clock_5__N_56[4] ), 
    .DI0(\logic.alien_clock_5__N_56[3] ), .D1(\logic.n2321 ), .C1(\logic.n2 ), 
    .D0(\logic.n1212 ), .C0(\logic.n3 ), .LSR(\logic.alien_clock[5] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1212 ), .CIN1(\logic.n2321 ), 
    .Q0(\logic.n3 ), .Q1(\logic.n2 ), .F0(\logic.alien_clock_5__N_56[3] ), 
    .F1(\logic.alien_clock_5__N_56[4] ), .COUT1(\logic.n1214 ), 
    .COUT0(\logic.n2321 ));
  logic_SLICE_14 \logic.SLICE_14 ( .DI1(\logic.top_two_c_1_N_69[5] ), 
    .DI0(\logic.top_two_c_1_N_69[4] ), .D1(\logic.n2360 ), .C1(\logic.n315 ), 
    .B1(\logic.alien_xposition[4] ), .D0(\logic.n1181 ), .C0(\logic.n315 ), 
    .B0(\logic.alien_xposition[3] ), .CE(\logic.alien_clock[5] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1181 ), .CIN1(\logic.n2360 ), 
    .Q0(\logic.alien_xposition[3] ), .Q1(\logic.alien_xposition[4] ), 
    .F0(\logic.top_two_c_1_N_69[4] ), .F1(\logic.top_two_c_1_N_69[5] ), 
    .COUT1(\logic.n1183 ), .COUT0(\logic.n2360 ));
  logic_SLICE_15 \logic.SLICE_15 ( .DI1(\logic.alien_clock_5__N_56[2] ), 
    .DI0(\logic.alien_clock_5__N_56[1] ), .D1(\logic.n2318 ), .C1(\logic.n4 ), 
    .D0(\logic.n1210 ), .C0(\logic.n5 ), .LSR(\logic.alien_clock[5] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1210 ), .CIN1(\logic.n2318 ), 
    .Q0(\logic.n5 ), .Q1(\logic.n4 ), .F0(\logic.alien_clock_5__N_56[1] ), 
    .F1(\logic.alien_clock_5__N_56[2] ), .COUT1(\logic.n1212 ), 
    .COUT0(\logic.n2318 ));
  logic_SLICE_16 \logic.SLICE_16 ( .DI1(\logic.alien_clock_5__N_56[0] ), 
    .D1(\logic.n2282 ), .C1(\logic.n6 ), .B1(VCC_net), 
    .LSR(\logic.alien_clock[5] ), .CLK(nes_clk_c), .CIN1(\logic.n2282 ), 
    .Q1(\logic.n6 ), .F1(\logic.alien_clock_5__N_56[0] ), 
    .COUT1(\logic.n1210 ), .COUT0(\logic.n2282 ));
  logic_SLICE_17 \logic.SLICE_17 ( .DI1(\logic.top_two_c_1_N_69[7] ), 
    .DI0(\logic.top_two_c_1_N_69[6] ), .D1(\logic.n2363 ), .C1(\logic.n315 ), 
    .B1(\logic.alien_xposition[6] ), .D0(\logic.n1183 ), .C0(\logic.n315 ), 
    .B0(\logic.alien_xposition[5] ), .CE(\logic.alien_clock[5] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1183 ), .CIN1(\logic.n2363 ), 
    .Q0(\logic.alien_xposition[5] ), .Q1(\logic.alien_xposition[6] ), 
    .F0(\logic.top_two_c_1_N_69[6] ), .F1(\logic.top_two_c_1_N_69[7] ), 
    .COUT1(\logic.n1185 ), .COUT0(\logic.n2363 ));
  logic_SLICE_18 \logic.SLICE_18 ( .DI1(\logic.logic_alieny_7__N_1[2] ), 
    .DI0(\logic.logic_alieny_7__N_1[1] ), .D1(\logic.n2327 ), 
    .C1(\logic_alieny[2] ), .D0(\logic.n1200 ), .C0(\logic_alieny[1] ), 
    .CLK(nes_clk_c), .CIN0(\logic.n1200 ), .CIN1(\logic.n2327 ), 
    .Q0(\logic_alieny[1] ), .Q1(\logic_alieny[2] ), 
    .F0(\logic.logic_alieny_7__N_1[1] ), .F1(\logic.logic_alieny_7__N_1[2] ), 
    .COUT1(\logic.n1202 ), .COUT0(\logic.n2327 ));
  logic_SLICE_19 \logic.SLICE_19 ( .DI1(\logic.logic_alieny_7__N_1[8] ), 
    .DI0(\logic.logic_alieny_7__N_1[7] ), .D1(\logic.n2336 ), .C1(top_two_c_0), 
    .B1(\logic.n271 ), .D0(\logic.n1206 ), .C0(\logic_alieny[7] ), 
    .B0(\logic.n271 ), .CLK(nes_clk_c), .CIN0(\logic.n1206 ), 
    .CIN1(\logic.n2336 ), .Q0(\logic_alieny[7] ), .Q1(top_two_c_0), 
    .F0(\logic.logic_alieny_7__N_1[7] ), .F1(\logic.logic_alieny_7__N_1[8] ), 
    .COUT0(\logic.n2336 ));
  nes_SLICE_20 \nes.SLICE_20 ( .DI1(\nes.counter_20__N_18[0] ), 
    .D1(\nes.n2285 ), .C1(\nes.n21 ), .B1(VCC_net), 
    .LSR(\nes.NEScount_0__N_55 ), .CLK(clk), .CIN1(\nes.n2285 ), 
    .Q1(\nes.n21 ), .F1(\nes.counter_20__N_18[0] ), .COUT1(\nes.n1217 ), 
    .COUT0(\nes.n2285 ));
  nes_SLICE_21 \nes.SLICE_21 ( .DI1(\nes.counter_20__N_18[16] ), 
    .DI0(\nes.counter_20__N_18[15] ), .D1(\nes.n2309 ), .C1(\nes.NEScount[7] ), 
    .D0(\nes.n1231 ), .C0(\nes.NEScount[6] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1231 ), .CIN1(\nes.n2309 ), .Q0(\nes.NEScount[6] ), 
    .Q1(\nes.NEScount[7] ), .F0(\nes.counter_20__N_18[15] ), 
    .F1(\nes.counter_20__N_18[16] ), .COUT1(\nes.n1233 ), .COUT0(\nes.n2309 ));
  nes_SLICE_22 \nes.SLICE_22 ( .DI1(\nes.counter_20__N_18[14] ), 
    .DI0(\nes.counter_20__N_18[13] ), .D1(\nes.n2306 ), .C1(\nes.NEScount[5] ), 
    .D0(\nes.n1229 ), .C0(\nes.NEScount[4] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1229 ), .CIN1(\nes.n2306 ), .Q0(\nes.NEScount[4] ), 
    .Q1(\nes.NEScount[5] ), .F0(\nes.counter_20__N_18[13] ), 
    .F1(\nes.counter_20__N_18[14] ), .COUT1(\nes.n1231 ), .COUT0(\nes.n2306 ));
  nes_SLICE_23 \nes.SLICE_23 ( .DI1(\nes.counter_20__N_18[10] ), 
    .DI0(\nes.counter_20__N_18[9] ), .D1(\nes.n2300 ), .C1(\nes.NEScount[1] ), 
    .D0(\nes.n1225 ), .C0(\nes.NEScount[0] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1225 ), .CIN1(\nes.n2300 ), .Q0(\nes.NEScount[0] ), 
    .Q1(\nes.NEScount[1] ), .F0(\nes.counter_20__N_18[9] ), 
    .F1(\nes.counter_20__N_18[10] ), .COUT1(\nes.n1227 ), .COUT0(\nes.n2300 ));
  nes_SLICE_24 \nes.SLICE_24 ( .DI1(\nes.counter_20__N_18[8] ), 
    .DI0(\nes.counter_20__N_18[7] ), .D1(\nes.n2297 ), .C1(\nes.counter[8] ), 
    .D0(\nes.n1223 ), .C0(\nes.counter[7] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1223 ), .CIN1(\nes.n2297 ), .Q0(\nes.counter[7] ), 
    .Q1(\nes.counter[8] ), .F0(\nes.counter_20__N_18[7] ), 
    .F1(\nes.counter_20__N_18[8] ), .COUT1(\nes.n1225 ), .COUT0(\nes.n2297 ));
  nes_SLICE_25 \nes.SLICE_25 ( .DI1(\nes.counter_20__N_18[6] ), 
    .DI0(\nes.counter_20__N_18[5] ), .D1(\nes.n2294 ), .C1(\nes.counter[6] ), 
    .D0(\nes.n1221 ), .C0(\nes.counter[5] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1221 ), .CIN1(\nes.n2294 ), .Q0(\nes.counter[5] ), 
    .Q1(\nes.counter[6] ), .F0(\nes.counter_20__N_18[5] ), 
    .F1(\nes.counter_20__N_18[6] ), .COUT1(\nes.n1223 ), .COUT0(\nes.n2294 ));
  nes_SLICE_26 \nes.SLICE_26 ( .DI1(\nes.counter_20__N_18[4] ), 
    .DI0(\nes.counter_20__N_18[3] ), .D1(\nes.n2291 ), .C1(\nes.counter[4] ), 
    .D0(\nes.n1219 ), .C0(\nes.counter[3] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1219 ), .CIN1(\nes.n2291 ), .Q0(\nes.counter[3] ), 
    .Q1(\nes.counter[4] ), .F0(\nes.counter_20__N_18[3] ), 
    .F1(\nes.counter_20__N_18[4] ), .COUT1(\nes.n1221 ), .COUT0(\nes.n2291 ));
  nes_SLICE_27 \nes.SLICE_27 ( .DI1(\nes.counter_20__N_18[12] ), 
    .DI0(\nes.counter_20__N_18[11] ), .D1(\nes.n2303 ), .C1(\nes.NEScount[3] ), 
    .D0(\nes.n1227 ), .C0(\nes.NEScount[2] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1227 ), .CIN1(\nes.n2303 ), .Q0(\nes.NEScount[2] ), 
    .Q1(\nes.NEScount[3] ), .F0(\nes.counter_20__N_18[11] ), 
    .F1(\nes.counter_20__N_18[12] ), .COUT1(\nes.n1229 ), .COUT0(\nes.n2303 ));
  nes_SLICE_28 \nes.SLICE_28 ( .DI1(\nes.counter_20__N_18[2] ), 
    .DI0(\nes.counter_20__N_18[1] ), .D1(\nes.n2288 ), .C1(\nes.counter[2] ), 
    .D0(\nes.n1217 ), .C0(\nes.n20 ), .LSR(\nes.NEScount_0__N_55 ), .CLK(clk), 
    .CIN0(\nes.n1217 ), .CIN1(\nes.n2288 ), .Q0(\nes.n20 ), 
    .Q1(\nes.counter[2] ), .F0(\nes.counter_20__N_18[1] ), 
    .F1(\nes.counter_20__N_18[2] ), .COUT1(\nes.n1219 ), .COUT0(\nes.n2288 ));
  nes_SLICE_29 \nes.SLICE_29 ( .DI1(\nes.counter_20__N_18[20] ), 
    .DI0(\nes.counter_20__N_18[19] ), .D1(\nes.n2315 ), .C1(\nes.counter[20] ), 
    .D0(\nes.n1235 ), .C0(\nes.counter[19] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1235 ), .CIN1(\nes.n2315 ), .Q0(\nes.counter[19] ), 
    .Q1(\nes.counter[20] ), .F0(\nes.counter_20__N_18[19] ), 
    .F1(\nes.counter_20__N_18[20] ), .COUT0(\nes.n2315 ));
  nes_SLICE_30 \nes.SLICE_30 ( .DI1(\nes.counter_20__N_18[18] ), 
    .DI0(\nes.counter_20__N_18[17] ), .D1(\nes.n2312 ), .C1(\nes.counter[18] ), 
    .D0(\nes.n1233 ), .C0(\nes.NEScount[8] ), .LSR(\nes.NEScount_0__N_55 ), 
    .CLK(clk), .CIN0(\nes.n1233 ), .CIN1(\nes.n2312 ), .Q0(\nes.NEScount[8] ), 
    .Q1(\nes.counter[18] ), .F0(\nes.counter_20__N_18[17] ), 
    .F1(\nes.counter_20__N_18[18] ), .COUT1(\nes.n1235 ), .COUT0(\nes.n2312 ));
  display_SLICE_31 \display.SLICE_31 ( .DI0(\display.led_c_0_N_71 ), 
    .D0(\display.counter[8] ), .CLK(clk), .Q0(led_c_0), 
    .F0(\display.led_c_0_N_71 ));
  nes_SLICE_32 \nes.SLICE_32 ( .DI1(\nes.temp[5].sig_001.FeedThruLUT ), 
    .DI0(\nes.temp[6].sig_000.FeedThruLUT ), .D1(\nes.temp[5] ), 
    .D0(\nes.temp[6] ), .CLK(nes_clk_c), .Q0(\nes.temp[7] ), 
    .Q1(\nes.temp[6] ), .F0(\nes.temp[6].sig_000.FeedThruLUT ), 
    .F1(\nes.temp[5].sig_001.FeedThruLUT ));
  nes_SLICE_34 \nes.SLICE_34 ( .DI1(\nes.temp[3].sig_003.FeedThruLUT ), 
    .DI0(\nes.temp[4].sig_002.FeedThruLUT ), .D1(\nes.temp[3] ), 
    .D0(\nes.temp[4] ), .CLK(nes_clk_c), .Q0(\nes.temp[5] ), 
    .Q1(\nes.temp[4] ), .F0(\nes.temp[4].sig_002.FeedThruLUT ), 
    .F1(\nes.temp[3].sig_003.FeedThruLUT ));
  nes_SLICE_36 \nes.SLICE_36 ( .DI1(\nes.temp[1].sig_005.FeedThruLUT ), 
    .DI0(\nes.temp[2].sig_004.FeedThruLUT ), .D1(\nes.temp[1] ), 
    .D0(\nes.temp[2] ), .CLK(nes_clk_c), .Q0(\nes.temp[3] ), 
    .Q1(\nes.temp[2] ), .F0(\nes.temp[2].sig_004.FeedThruLUT ), 
    .F1(\nes.temp[1].sig_005.FeedThruLUT ));
  nes_SLICE_38 \nes.SLICE_38 ( .DI1(\nes.temp_0__N_17 ), 
    .DI0(\nes.temp[0].sig_006.FeedThruLUT ), .D1(nes_data_c), 
    .D0(\nes.temp[0] ), .CLK(nes_clk_c), .Q0(\nes.temp[1] ), 
    .Q1(\nes.temp[0] ), .F0(\nes.temp[0].sig_006.FeedThruLUT ), 
    .F1(\nes.temp_0__N_17 ));
  nes_SLICE_39 \nes.SLICE_39 ( .DI1(\nes.temp[6].sig_009.FeedThruLUT ), 
    .DI0(\nes.temp[7].sig_007.FeedThruLUT ), .D1(\nes.temp[6] ), 
    .D0(\nes.temp[7] ), .CE(\nes.temp_two_0__N_16 ), .CLK(\nes.counter[20] ), 
    .Q0(\nes.temp_two[7] ), .Q1(\nes.temp_two[6] ), 
    .F0(\nes.temp[7].sig_007.FeedThruLUT ), 
    .F1(\nes.temp[6].sig_009.FeedThruLUT ));
  nes_SLICE_40 \nes.SLICE_40 ( .DI1(\nes.temp[1].sig_014.FeedThruLUT ), 
    .DI0(\nes.temp[0].sig_008.FeedThruLUT ), .D1(\nes.temp[1] ), 
    .D0(\nes.temp[0] ), .CE(\nes.temp_two_0__N_16 ), .CLK(\nes.counter[20] ), 
    .Q0(\nes.temp_two[0] ), .Q1(\nes.temp_two[1] ), 
    .F0(\nes.temp[0].sig_008.FeedThruLUT ), 
    .F1(\nes.temp[1].sig_014.FeedThruLUT ));
  nes_SLICE_42 \nes.SLICE_42 ( .DI1(\nes.temp[4].sig_011.FeedThruLUT ), 
    .DI0(\nes.temp[5].sig_010.FeedThruLUT ), .D1(\nes.temp[4] ), 
    .D0(\nes.temp[5] ), .CE(\nes.temp_two_0__N_16 ), .CLK(\nes.counter[20] ), 
    .Q0(\nes.temp_two[5] ), .Q1(\nes.temp_two[4] ), 
    .F0(\nes.temp[5].sig_010.FeedThruLUT ), 
    .F1(\nes.temp[4].sig_011.FeedThruLUT ));
  nes_SLICE_44 \nes.SLICE_44 ( .DI1(\nes.temp[2].sig_013.FeedThruLUT ), 
    .DI0(\nes.temp[3].sig_012.FeedThruLUT ), .D1(\nes.temp[2] ), 
    .D0(\nes.temp[3] ), .CE(\nes.temp_two_0__N_16 ), .CLK(\nes.counter[20] ), 
    .Q0(\nes.temp_two[3] ), .Q1(\nes.temp_two[2] ), 
    .F0(\nes.temp[3].sig_012.FeedThruLUT ), 
    .F1(\nes.temp[2].sig_013.FeedThruLUT ));
  logic_SLICE_48 \logic.SLICE_48 ( .D1(\logic.alien_direction ), 
    .C1(\logic.alien_direction_N_82 ), .B1(\logic.alien_direction_N_81 ), 
    .A1(\logic.alien_xposition[7] ), .D0(\logic.n61 ), .C0(\logic.n1802 ), 
    .B0(\logic.n1334 ), .A0(top_two_c_1), .F0(\logic.alien_direction_N_82 ), 
    .F1(\logic.alien_direction ));
  logic_SLICE_49 \logic.SLICE_49 ( .D1(\logic.alien_xposition[6] ), 
    .C1(\logic.alien_xposition[5] ), .B1(\logic.alien_xposition[8] ), 
    .A1(top_two_c_1), .D0(\logic.alien_xposition[5] ), 
    .C0(\logic.alien_xposition[6] ), .B0(top_two_c_1), .F0(\logic.n61 ), 
    .F1(\logic.alien_direction_N_81 ));
  logic_SLICE_51 \logic.SLICE_51 ( .C0(\logic.alien_direction ), 
    .F0(\logic.n315 ));
  display_SLICE_52 \display.SLICE_52 ( .D1(\display.tensdigit[6] ), 
    .C1(\display.onesdigit[6] ), .B1(led_c_0), .D0(\logic_alieny[1] ), 
    .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), .A0(\logic_alieny[0] ), 
    .F0(\display.onesdigit[6] ), .F1(disp_c_6));
  display_SLICE_54 \display.SLICE_54 ( .D1(\display.tensdigit[5] ), 
    .C1(\display.onesdigit[5] ), .A1(led_c_0), .D0(\logic_alieny[1] ), 
    .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), .A0(\logic_alieny[0] ), 
    .F0(\display.onesdigit[5] ), .F1(disp_c_5));
  display_SLICE_56 \display.SLICE_56 ( .D1(led_c_0), 
    .C1(\display.onesdigit[4] ), .A1(\display.tensdigit[4] ), 
    .D0(\logic_alieny[1] ), .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), 
    .A0(\logic_alieny[0] ), .F0(\display.onesdigit[4] ), .F1(disp_c_4));
  display_SLICE_58 \display.SLICE_58 ( .D1(\display.tensdigit[3] ), 
    .C1(\display.onesdigit[3] ), .B1(led_c_0), .D0(\logic_alieny[1] ), 
    .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), .A0(\logic_alieny[0] ), 
    .F0(\display.onesdigit[3] ), .F1(disp_c_3));
  display_SLICE_60 \display.SLICE_60 ( .D1(\display.tensdigit[2] ), 
    .C1(\display.onesdigit[2] ), .A1(led_c_0), .D0(\logic_alieny[1] ), 
    .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), .A0(\logic_alieny[0] ), 
    .F0(\display.onesdigit[2] ), .F1(disp_c_2));
  display_SLICE_62 \display.SLICE_62 ( .D1(\display.tensdigit[1] ), 
    .C1(\display.onesdigit[1] ), .A1(led_c_0), .D0(\logic_alieny[1] ), 
    .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), .A0(\logic_alieny[0] ), 
    .F0(\display.onesdigit[1] ), .F1(disp_c_1));
  display_SLICE_64 \display.SLICE_64 ( .D1(\display.tensdigit[0] ), 
    .C1(\display.onesdigit[0] ), .A1(led_c_0), .D0(\logic_alieny[1] ), 
    .C0(\logic_alieny[2] ), .B0(\logic_alieny[3] ), .A0(\logic_alieny[0] ), 
    .F0(\display.onesdigit[0] ), .F1(disp_c_0));
  logic_SLICE_66 \logic.SLICE_66 ( .D1(\logic.alien_xposition[0] ), 
    .C1(\logic.n66 ), .B1(\logic.alien_xposition[1] ), 
    .A1(\logic.alien_xposition[2] ), .D0(\logic.alien_xposition[3] ), 
    .C0(\logic.alien_xposition[4] ), .F0(\logic.n66 ), .F1(\logic.n1802 ));
  logic_SLICE_67 \logic.SLICE_67 ( .D0(\logic.n66 ), .C0(\logic.n1562 ), 
    .B0(\logic.alien_xposition[0] ), .A0(\logic.alien_clock[5] ), 
    .F0(\logic.n271 ));
  logic_SLICE_68 \logic.SLICE_68 ( .D1(\logic.alien_xposition[6] ), 
    .C1(\logic.n70 ), .B1(\logic.alien_xposition[5] ), .A1(top_two_c_1), 
    .D0(\logic.alien_xposition[7] ), .C0(\logic.alien_xposition[8] ), 
    .B0(\logic.alien_xposition[2] ), .A0(\logic.alien_xposition[1] ), 
    .F0(\logic.n70 ), .F1(\logic.n1562 ));
  nes_SLICE_70 \nes.SLICE_70 ( .D0(\nes.temp_two[7] ), .C0(\nes.temp_two[1] ), 
    .B0(\nes.temp[7] ), .A0(\nes.temp[1] ), .F0(\nes.n12 ));
  nes_SLICE_71 \nes.SLICE_71 ( .D1(\nes.n11 ), .C1(\nes.n9 ), .B1(\nes.n10 ), 
    .A1(\nes.n12 ), .D0(\nes.temp_two[6] ), .C0(\nes.temp_two[0] ), 
    .B0(\nes.temp[0] ), .A0(\nes.temp[6] ), .F0(\nes.n9 ), 
    .F1(\nes.counter[20]_enable_8 ));
  nes_SLICE_72 \nes.SLICE_72 ( .D0(\nes.temp_two[4] ), .C0(\nes.temp[2] ), 
    .B0(\nes.temp_two[2] ), .A0(\nes.temp[4] ), .F0(\nes.n10 ));
  nes_SLICE_73 \nes.SLICE_73 ( .D1(\nes.n10 ), .C1(\nes.n11 ), .B1(\nes.n12 ), 
    .A1(\nes.n9 ), .D0(\nes.temp[3] ), .C0(\nes.temp_two[3] ), 
    .B0(\nes.temp[5] ), .A0(\nes.temp_two[5] ), .F0(\nes.n11 ), 
    .F1(\nes.temp_two_0__N_16 ));
  nes_SLICE_74 \nes.SLICE_74 ( .D1(\nes.n9_adj_84 ), .C1(\nes.n1566 ), 
    .B1(\nes.counter[8] ), .A1(\nes.n10_adj_83 ), .D0(\nes.NEScount[1] ), 
    .C0(\nes.NEScount[0] ), .F0(\nes.n1566 ), .F1(\nes.n1567 ));
  nes_SLICE_75 \nes.SLICE_75 ( .D1(\nes.NEScount[7] ), 
    .C1(\nes.nes_latch_c_N_67 ), .B1(\nes.NEScount[3] ), 
    .A1(\nes.nes_latch_c_N_68 ), .D0(\nes.n1566 ), .C0(\nes.NEScount[4] ), 
    .B0(\nes.NEScount[8] ), .A0(\nes.NEScount[5] ), 
    .F0(\nes.nes_latch_c_N_67 ), .F1(nes_latch_c));
  nes_SLICE_76 \nes.SLICE_76 ( .D1(\nes.counter[7] ), .C1(\nes.counter[5] ), 
    .D0(\nes.counter[4] ), .C0(\nes.counter[3] ), .B0(\nes.counter[6] ), 
    .A0(\nes.counter[2] ), .F0(\nes.n10_adj_83 ), .F1(\nes.n9_adj_84 ));
  nes_SLICE_78 \nes.SLICE_78 ( .D1(\nes.n955 ), .C1(\nes.n28 ), 
    .B1(\nes.NEScount[5] ), .A1(\nes.NEScount[8] ), .D0(\nes.NEScount[2] ), 
    .C0(\nes.n1567 ), .B0(\nes.NEScount[3] ), .A0(\nes.NEScount[4] ), 
    .F0(\nes.n28 ), .F1(\nes.n36 ));
  nes_SLICE_80 \nes.SLICE_80 ( .D1(\nes.counter[8] ), 
    .C1(\nes.nes_clk_c_N_58 ), .B1(\nes.NEScount[8] ), .A1(\nes.NEScount[5] ), 
    .D0(\nes.NEScount[7] ), .C0(\nes.NEScount[6] ), .B0(\nes.NEScount[3] ), 
    .A0(\nes.NEScount[4] ), .F0(\nes.nes_clk_c_N_58 ), .F1(nes_clk_c));
  nes_SLICE_82 \nes.SLICE_82 ( .D1(\nes.NEScount[7] ), .B1(\nes.NEScount[6] ), 
    .C0(\nes.NEScount[6] ), .A0(\nes.NEScount[2] ), 
    .F0(\nes.nes_latch_c_N_68 ), .F1(\nes.n955 ));
  display_tens_SLICE_84 \display.tens.SLICE_84 ( .D0(\logic_alieny[4] ), 
    .C0(\logic_alieny[6] ), .B0(\logic_alieny[5] ), .A0(\logic_alieny[7] ), 
    .F0(\display.tensdigit[1] ));
  display_tens_SLICE_85 \display.tens.SLICE_85 ( .D1(\logic_alieny[6] ), 
    .C1(\logic_alieny[4] ), .B1(\logic_alieny[7] ), .A1(\logic_alieny[5] ), 
    .D0(\logic_alieny[4] ), .C0(\logic_alieny[6] ), .B0(\logic_alieny[5] ), 
    .A0(\logic_alieny[7] ), .F0(\display.tensdigit[0] ), 
    .F1(\display.tensdigit[2] ));
  display_tens_SLICE_87 \display.tens.SLICE_87 ( .D1(\logic_alieny[6] ), 
    .C1(\logic_alieny[4] ), .B1(\logic_alieny[7] ), .A1(\logic_alieny[5] ), 
    .D0(\logic_alieny[4] ), .C0(\logic_alieny[6] ), .B0(\logic_alieny[5] ), 
    .A0(\logic_alieny[7] ), .F0(\display.tensdigit[6] ), 
    .F1(\display.tensdigit[3] ));
  display_tens_SLICE_89 \display.tens.SLICE_89 ( .D1(\logic_alieny[6] ), 
    .C1(\logic_alieny[4] ), .B1(\logic_alieny[7] ), .A1(\logic_alieny[5] ), 
    .D0(\logic_alieny[4] ), .C0(\logic_alieny[6] ), .B0(\logic_alieny[5] ), 
    .A0(\logic_alieny[7] ), .F0(\display.tensdigit[5] ), 
    .F1(\display.tensdigit[4] ));
  nes_SLICE_90 \nes.SLICE_90 ( .D0(\nes.counter[20] ), .C0(\nes.n36 ), 
    .B0(\nes.counter[19] ), .A0(\nes.counter[18] ), 
    .F0(\nes.NEScount_0__N_55 ));
  logic_SLICE_93 \logic.SLICE_93 ( .D0(\logic.alien_xposition[8] ), 
    .B0(\logic.alien_xposition[7] ), .F0(\logic.n1334 ));
  SLICE_99 SLICE_99( .F0(VCC_net));
  osc osc( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  display_counter_8__I_0 \display.counter_8__I_0 ( .DO0(\display.counter[8] ), 
    .OUTCLK(clk), .PADDO(led_c_1));
  nes_temp_0__I_0 \nes.temp_0__I_0 ( .DO0(\nes.temp[0] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_0));
  nes_temp_2__I_0 \nes.temp_2__I_0 ( .DO0(\nes.temp[2] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_2));
  nes_temp_7__I_0 \nes.temp_7__I_0 ( .DO0(\nes.temp[7] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_7));
  nes_temp_3__I_0 \nes.temp_3__I_0 ( .DO0(\nes.temp[3] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_3));
  nes_temp_6__I_0 \nes.temp_6__I_0 ( .DO0(\nes.temp[6] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_6));
  nes_temp_5__I_0 \nes.temp_5__I_0 ( .DO0(\nes.temp[5] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_5));
  nes_temp_4__I_0 \nes.temp_4__I_0 ( .DO0(\nes.temp[4] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_4));
  nes_temp_1__I_0 \nes.temp_1__I_0 ( .DO0(\nes.temp[1] ), 
    .CE(\nes.counter[20]_enable_8 ), .OUTCLK(\nes.counter[20] ), 
    .PADDO(temp_c_1));
  nes_data nes_data_I( .PADDI(nes_data_c), .nes_data(nes_data));
  led_0_ \led[0]_I ( .PADDO(led_c_0), .led0(led[0]));
  led_1_ \led[1]_I ( .PADDO(led_c_1), .led1(led[1]));
  top_two_0_ \top_two[0]_I ( .PADDO(top_two_c_0), .toptwo0(top_two[0]));
  top_two_1_ \top_two[1]_I ( .PADDO(top_two_c_1), .toptwo1(top_two[1]));
  disp_0_ \disp[0]_I ( .PADDO(disp_c_0), .disp0(disp[0]));
  disp_1_ \disp[1]_I ( .PADDO(disp_c_1), .disp1(disp[1]));
  disp_2_ \disp[2]_I ( .PADDO(disp_c_2), .disp2(disp[2]));
  disp_3_ \disp[3]_I ( .PADDO(disp_c_3), .disp3(disp[3]));
  disp_4_ \disp[4]_I ( .PADDO(disp_c_4), .disp4(disp[4]));
  disp_5_ \disp[5]_I ( .PADDO(disp_c_5), .disp5(disp[5]));
  disp_6_ \disp[6]_I ( .PADDO(disp_c_6), .disp6(disp[6]));
  nes_latch nes_latch_I( .PADDO(nes_latch_c), .nes_latch(nes_latch));
  temp_0_ \temp[0]_I ( .PADDO(temp_c_0), .temp0(temp[0]));
  temp_1_ \temp[1]_I ( .PADDO(temp_c_1), .temp1(temp[1]));
  temp_2_ \temp[2]_I ( .PADDO(temp_c_2), .temp2(temp[2]));
  temp_3_ \temp[3]_I ( .PADDO(temp_c_3), .temp3(temp[3]));
  temp_4_ \temp[4]_I ( .PADDO(temp_c_4), .temp4(temp[4]));
  temp_5_ \temp[5]_I ( .PADDO(temp_c_5), .temp5(temp[5]));
  temp_6_ \temp[6]_I ( .PADDO(temp_c_6), .temp6(temp[6]));
  temp_7_ \temp[7]_I ( .PADDO(temp_c_7), .temp7(temp[7]));
  nes_clk nes_clk_I( .PADDO(nes_clk_c), .nes_clk(nes_clk));
endmodule

module display_SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \display/counter_155_182_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \display/counter_155_182__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \display/counter_155_182__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module display_SLICE_1 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \display/counter_155_182_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \display/counter_155_182__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \display/counter_155_182__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module display_SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \display/counter_155_182_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \display/counter_155_182__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \display/counter_155_182__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module display_SLICE_3 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \display/counter_155_182_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \display/counter_155_182__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module display_SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \display/counter_155_182_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \display/counter_155_182__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \display/counter_8__I_0_2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module logic_SLICE_5 ( input DI0, D1, D0, C0, B0, CE, CLK, CIN0, CIN1, output 
    Q0, F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  fa2 \logic/add_663_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(), 
    .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/top_two_c_1_I_0 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_6 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \logic/alien_clock_153_183_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/alien_clock_5__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module logic_SLICE_7 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \logic/add_663_3 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/top_two_c_1_I_35 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \logic/top_two_c_1_I_34 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_8 ( input DI1, D1, C1, B1, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  fa2 \logic/alien_yposition_154_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/logic_alieny_7__I_7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module logic_SLICE_9 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \logic/alien_yposition_154_add_4_7 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/logic_alieny_7__I_2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/logic_alieny_7__I_1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module logic_SLICE_10 ( input DI1, DI0, D1, C1, B1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \logic/alien_yposition_154_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/logic_alieny_7__I_4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/logic_alieny_7__I_3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module logic_SLICE_11 ( input DI1, D1, C1, B1, B0, CE, CLK, CIN1, output Q1, 
    F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly;

  fa2 \logic/add_663_1 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(VCCI), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/top_two_c_1_I_36 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_12 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \logic/add_663_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/top_two_c_1_I_29 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \logic/top_two_c_1_I_28 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_13 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \logic/alien_clock_153_183_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/alien_clock_153_183__i4 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/alien_clock_153_183__i5 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module logic_SLICE_14 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \logic/add_663_5 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/top_two_c_1_I_33 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \logic/top_two_c_1_I_32 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_15 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \logic/alien_clock_153_183_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/alien_clock_153_183__i2 ( .D0(DI0_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/alien_clock_153_183__i3 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module logic_SLICE_16 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \logic/alien_clock_153_183_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/alien_clock_153_183__i1 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module logic_SLICE_17 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CE, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  fa2 \logic/add_663_7 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), 
    .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), .S1(F1), 
    .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/top_two_c_1_I_31 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  ffsre2 \logic/top_two_c_1_I_30 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_18 ( input DI1, DI0, D1, C1, D0, C0, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \logic/alien_yposition_154_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/logic_alieny_7__I_6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/logic_alieny_7__I_5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module logic_SLICE_19 ( input DI1, DI0, D1, C1, B1, D0, C0, B0, CLK, CIN0, 
    CIN1, output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  fa2 \logic/alien_yposition_154_add_4_9 ( .A0(GNDI), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \logic/logic_alieny_7__I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \logic/logic_alieny_7__I_27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module nes_SLICE_20 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_152__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_21 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_17 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_22 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_15 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_23 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_24 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_25 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_26 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_27 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_13 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_28 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_152__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_29 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_21 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module nes_SLICE_30 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \nes/counter_152_add_4_19 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \nes/counter_20__I_18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/counter_20__I_10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module display_SLICE_31 ( input DI0, D0, CLK, output Q0, F0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \display/i6_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \display/led_c_0_I_0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_32 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40001 \nes.SLICE_32_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_32_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_5__I_0_3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/temp_6__I_0_3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_34 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40001 \nes.SLICE_34_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_34_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_3__I_0_3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/temp_4__I_0_3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module nes_SLICE_36 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40001 \nes.SLICE_36_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_36_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_1__I_0_3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/temp_2__I_0_3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module nes_SLICE_38 ( input DI1, DI0, D1, D0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \nes/i10_1_lut ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_38_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_0__I_8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \nes/temp_0__I_0_3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_39 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 \nes.SLICE_39_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_39_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_6__I_0_2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \nes/temp_7__I_0_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module nes_SLICE_40 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 \nes.SLICE_40_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_40_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_1__I_0_2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \nes/temp_0__I_0_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module nes_SLICE_42 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 \nes.SLICE_42_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_42_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_4__I_0_2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \nes/temp_5__I_0_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module nes_SLICE_44 ( input DI1, DI0, D1, D0, CE, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40001 \nes.SLICE_44_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40002 \nes.SLICE_44_K0 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \nes/temp_2__I_0_2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  ffsre2 \nes/temp_3__I_0_2 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module logic_SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40004 \logic/alien_direction_I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \logic/i732_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0x0F11") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xEEE2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module logic_SLICE_49 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40006 \logic/i1120_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 \logic/i2_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module logic_SLICE_51 ( input C0, output F0 );
  wire   GNDI;

  lut40008 \logic/i138_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_52 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40009 \display/onesdigit_6__I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \display/ones/logic_alieny_0__I_0_2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFC30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x0892") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_54 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40011 \display/onesdigit_5__I_0 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \display/ones/logic_alieny_0__I_0_3 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0xD860") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_56 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40013 \display/onesdigit_4__I_0 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \display/ones/logic_alieny_0__I_0_4 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xAAF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xC140") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_58 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40009 \display/onesdigit_3__I_0 ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 \display/ones/logic_alieny_0__I_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xA41A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_60 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40011 \display/onesdigit_2__I_0 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \display/ones/logic_alieny_1__I_0_2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x223A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_62 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40011 \display/onesdigit_1__I_0 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \display/ones/logic_alieny_1__I_0_3 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x2382") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_SLICE_64 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40011 \display/onesdigit_0__I_0 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \display/ones/logic_alieny_1__I_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x2043") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module logic_SLICE_66 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40019 \logic/i1136_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \logic/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xF0E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module logic_SLICE_67 ( input D0, C0, B0, A0, output F0 );

  lut40021 \logic/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module logic_SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40022 \logic/i3_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 \logic/i77_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x0010") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0x1008") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_70 ( input D0, C0, B0, A0, output F0 );

  lut40024 \nes/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0x7BDE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40025 \nes.i465_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \nes/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x0001") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_72 ( input D0, C0, B0, A0, output F0 );

  lut40027 \nes/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0x7DBE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 \nes/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \nes/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0x6FF6") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_74 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40030 \nes/i2_4_lut_adj_38 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 \nes/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xC080") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40031 \nes/NEScount_3__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \nes/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_76 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40033 \nes/i3_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \nes/i4_4_lut_adj_37 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_78 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40035 \nes/i218_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 \nes/i201_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xAA80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xEEEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40037 \nes/counter_8__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 \nes/i1006_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x0100") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_82 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 \nes/i1_2_lut_adj_39 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \nes/i2_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xFFCC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  LUT4 #("0xA0A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_tens_SLICE_84 ( input D0, C0, B0, A0, output F0 );

  lut40041 \display/tens/logic_alieny_5__I_0_3 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x6504") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_tens_SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40042 \display/tens/logic_alieny_5__I_0_2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40043 \display/tens/logic_alieny_5__I_0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x3170") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0x4121") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_tens_SLICE_87 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40044 \display/tens/logic_alieny_4__I_0 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \display/tens/logic_alieny_4__I_0_2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xA158") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x2910") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module display_tens_SLICE_89 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40046 \display/tens/logic_alieny_4__I_0_4 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40047 \display/tens/logic_alieny_4__I_0_3 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x8C02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x98E0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module nes_SLICE_90 ( input D0, C0, B0, A0, output F0 );

  lut40048 \nes/i220_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0xFE00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module logic_SLICE_93 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40049 \logic/i731_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_99 ( output F0 );
  wire   GNDI;

  lut40050 i1473( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module osc ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B osc( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module display_counter_8__I_0 ( input DO0, OUTCLK, output PADDO );
  wire   GNDI, VCCI, DO0_dly, OUTCLK_dly;

  IOL_B_B \display/counter_8__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module nes_temp_0__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_0__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_2__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_2__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_7__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_7__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_3__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_3__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_6__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_6__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_5__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_5__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_4__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_4__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_temp_1__I_0 ( input DO0, CE, OUTCLK, output PADDO );
  wire   GNDI, DO0_dly, OUTCLK_dly, CE_dly;

  IOL_B_B \nes/temp_1__I_0 ( .PADDI(GNDI), .DO1(GNDI), .DO0(DO0_dly), 
    .CE(CE_dly), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), .OUTCLK(OUTCLK_dly), 
    .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
    $setuphold (posedge OUTCLK, CE, 0:0:0, 0:0:0,,,, OUTCLK_dly, CE_dly);
  endspecify

endmodule

module nes_data ( output PADDI, input nes_data );
  wire   GNDI;

  BB_B_B \nes_data_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(nes_data));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (nes_data => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module led_0_ ( input PADDO, output led0 );
  wire   VCCI;

  BB_B_B \led_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(led0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => led0) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_1_ ( input PADDO, output led1 );
  wire   VCCI;

  BB_B_B \led_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(led1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => led1) = (0:0:0,0:0:0);
  endspecify

endmodule

module top_two_0_ ( input PADDO, output toptwo0 );
  wire   VCCI;

  BB_B_B \top_two_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(toptwo0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => toptwo0) = (0:0:0,0:0:0);
  endspecify

endmodule

module top_two_1_ ( input PADDO, output toptwo1 );
  wire   VCCI;

  BB_B_B \top_two_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(toptwo1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => toptwo1) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_0_ ( input PADDO, output disp0 );
  wire   VCCI;

  BB_B_B \disp_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp0) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_1_ ( input PADDO, output disp1 );
  wire   VCCI;

  BB_B_B \disp_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp1) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_2_ ( input PADDO, output disp2 );
  wire   VCCI;

  BB_B_B \disp_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp2) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_3_ ( input PADDO, output disp3 );
  wire   VCCI;

  BB_B_B \disp_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp3) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_4_ ( input PADDO, output disp4 );
  wire   VCCI;

  BB_B_B \disp_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp4) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_5_ ( input PADDO, output disp5 );
  wire   VCCI;

  BB_B_B \disp_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp5) = (0:0:0,0:0:0);
  endspecify

endmodule

module disp_6_ ( input PADDO, output disp6 );
  wire   VCCI;

  BB_B_B \disp_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(disp6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => disp6) = (0:0:0,0:0:0);
  endspecify

endmodule

module nes_latch ( input PADDO, output nes_latch );
  wire   VCCI;

  BB_B_B \nes_latch_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(nes_latch));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => nes_latch) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_0_ ( input PADDO, output temp0 );
  wire   VCCI;

  BB_B_B \temp_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp0) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_1_ ( input PADDO, output temp1 );
  wire   VCCI;

  BB_B_B \temp_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp1) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_2_ ( input PADDO, output temp2 );
  wire   VCCI;

  BB_B_B \temp_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp2) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_3_ ( input PADDO, output temp3 );
  wire   VCCI;

  BB_B_B \temp_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp3) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_4_ ( input PADDO, output temp4 );
  wire   VCCI;

  BB_B_B \temp_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp4) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_5_ ( input PADDO, output temp5 );
  wire   VCCI;

  BB_B_B \temp_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp5) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_6_ ( input PADDO, output temp6 );
  wire   VCCI;

  BB_B_B \temp_pad[6].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp6) = (0:0:0,0:0:0);
  endspecify

endmodule

module temp_7_ ( input PADDO, output temp7 );
  wire   VCCI;

  BB_B_B \temp_pad[7].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(temp7));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => temp7) = (0:0:0,0:0:0);
  endspecify

endmodule

module nes_clk ( input PADDO, output nes_clk );
  wire   VCCI;

  BB_B_B \nes_clk_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(nes_clk));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => nes_clk) = (0:0:0,0:0:0);
  endspecify

endmodule
